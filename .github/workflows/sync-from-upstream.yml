name: Sync from Upstream Main Branch

on:
  # 定时触发，每天凌晨2点运行
  schedule:
    - cron: '0 2 * * *'
  
  # 手动触发
  workflow_dispatch:

jobs:
  sync-from-upstream:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout current repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: main
      
      - name: Set Git user
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "actions@github.com"
      
      - name: Add upstream repository
        run: |
          git remote add upstream https://github.com/noro6/kc-web.git
          git fetch upstream main
      
      - name: Check local and upstream relationship
        id: check-branches
        run: |
          # 检查本地main分支是否有领先上游main分支的提交
          LOCAL_AHEAD=$(git rev-list --count upstream/main..HEAD)
          # 检查上游main分支是否有本地main分支没有的提交
          UPSTREAM_AHEAD=$(git rev-list --count HEAD..upstream/main)
          
          echo "local_ahead=$LOCAL_AHEAD" >> $GITHUB_OUTPUT
          echo "upstream_ahead=$UPSTREAM_AHEAD" >> $GITHUB_OUTPUT
          
          if [ "$UPSTREAM_AHEAD" -gt 0 ]; then
            echo "Upstream has $UPSTREAM_AHEAD new commits"
            echo "should_sync=true" >> $GITHUB_OUTPUT
          else
            echo "No new commits in upstream to sync"
            echo "should_sync=false" >> $GITHUB_OUTPUT
          fi
          
          if [ "$LOCAL_AHEAD" -gt 0 ]; then
            echo "Local branch has $LOCAL_AHEAD commits ahead of upstream"
            echo "has_local_commits=true" >> $GITHUB_OUTPUT
          else
            echo "Local branch has no unique commits"
            echo "has_local_commits=false" >> $GITHUB_OUTPUT
          fi
      
      - name: Try merge from upstream
        id: try-merge
        if: steps.check-branches.outputs.should_sync == 'true'
        run: |
          # 创建临时分支进行测试合并
          git checkout -b temp-merge-branch
          
          # 尝试合并上游更改
          if git merge upstream/main --no-commit --no-ff; then
            echo "Merge can be performed without conflicts"
            echo "can_merge=true" >> $GITHUB_OUTPUT
            # 取消合并，回到原来的状态
            git merge --abort
          else
            echo "Merge would result in conflicts"
            echo "can_merge=false" >> $GITHUB_OUTPUT
            # 取消合并，回到原来的状态
            git merge --abort
          fi
          
          # 返回main分支
          git checkout main
          git branch -D temp-merge-branch
      
      - name: Perform merge if possible
        if: steps.check-branches.outputs.should_sync == 'true' && steps.try-merge.outputs.can_merge == 'true'
        run: |
          # 根据是否有本地提交选择合并策略
          if [ "${{ steps.check-branches.outputs.has_local_commits }}" == "true" ]; then
            # 如果有本地提交，使用常规合并保留分支历史
            git merge upstream/main --no-edit
            echo "Merged upstream changes into main branch while preserving local commits"
          else
            # 如果没有本地提交，使用快进合并
            git merge upstream/main --ff-only
            echo "Fast-forward merged upstream changes into main branch"
          fi
      
      - name: Push changes if merged
        if: steps.check-branches.outputs.should_sync == 'true' && steps.try-merge.outputs.can_merge == 'true'
        run: |
          git push origin main
          echo "Pushed changes to main branch"
      
      - name: Generate commit details
        if: steps.check-branches.outputs.should_sync == 'true' && steps.try-merge.outputs.can_merge == 'false'
        run: |
          echo "# 此处将由GitHub Actions自动填充" > commit_details.txt
          echo "\`\`\`" >> commit_details.txt
          git log --pretty=format:"%h %s (%an, %ar)" HEAD..upstream/main >> commit_details.txt
          echo "\`\`\`" >> commit_details.txt
          
          # 创建临时模板文件
          cp .github/ISSUE_TEMPLATE/manual-merge-needed.md temp_issue.md
          # 替换占位符
          sed -i "s|# 此处将由GitHub Actions自动填充|$(cat commit_details.txt)|g" temp_issue.md
      
      - name: Create notification issue if manual merge needed
        if: steps.check-branches.outputs.should_sync == 'true' && steps.try-merge.outputs.can_merge == 'false'
        uses: peter-evans/create-issue-from-file@v4
        with:
          title: 需要手动合并上游仓库更新
          content-filepath: temp_issue.md
          labels: merge-conflict, help-wanted 